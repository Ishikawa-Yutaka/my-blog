---
// src/components/ArticleGrid.astro
import { getPath } from '../env';

interface Props {
  posts: any[];
  categoryName?: string; // オプショナルに変更
}

const { posts, categoryName } = Astro.props;

// ここでログを出す
posts.forEach((post) => {
  console.log(post.data.image);
});
---

<div class="article-grid">
  {posts.map((post) => (
    <a href={`/my-blog/blog/${post.data.category}/${post.slug}`} class="article-link">
      <article class="article-card">
        <img src={getPath(post.data.image || 'images/img-test.png')} alt={post.data.title}>
        <div class="article-card-content">
          <p class="meta">
              <span
          class="category"
          data-category={(categoryName ?? post.data.category).toLowerCase()}
        >
          {/* トップページのカテゴリ別表示はcategoryName、投稿一覧ページはpost.data.category */}
          {categoryName ?? post.data.category} 
        </span>
            <time class="date" datetime={post.data.date.toISOString()}>{post.data.date.toLocaleDateString('ja-JP')}</time>
          </p>
          <h3>{post.data.title}</h3>
        </div>
      </article>
    </a>
  ))}
</div>

<style>
  /* CSS GRID を使用した記事一覧 */
  .article-grid {
    display: grid;
    /* 画面幅に応じて列数を自動調整 */
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 25px;
    margin: 30px 4vw 30px;
  }

  .article-link{
    display:block;
    margin-bottom: 30px;
  }

  .article-card {
    overflow: hidden;
    display: flex;
    flex-direction: column;
    max-width: 380px;
    margin: auto;
  }

  .article-card img {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
    background-color: var(--light-gray);
  }

  .article-card-content {
    padding: 2px 4px 11px;
    flex-grow: 1; /* 内容が少なくても高さを揃える */
  }

  .article-card-content .meta {
    font-weight: 400;
    font-size: 1.3rem;
    margin:10px 0 5px 0;
  }

  .article-card-content .category{
    font-size:1.4rem;
    color: #fff;
    padding: 3px 5px 1px 8px;
    border-radius: 50px;
    vertical-align: middle;
  }

  .article-card-content .category[data-category="web"] {
    background-color: var(--category-web);
  }

  .article-card-content .category[data-category="photo"] {
    background-color: var(--category-photo);
  }

  .article-card-content .category[data-category="stroll"] {
    background-color: var(--category-stroll);
  }

  .article-card-content .category[data-category="succulent"] {
    background-color: var(--category-succulent);
  }

  .article-card-content .date {
    color: var(--text-color);
    margin-left: 0.5em;
  }

  .article-card-content h3 {
    font-size: 1.8rem;
    margin: 0;
    font-weight: 400;
    color: var(--text-color);
    text-decoration: none;
    transition: color 0.3s;
  }

  .article-card-content h3 a:hover {
    color: var(--main-color);
  }

  /* 768px以下の対応 */
  @media (max-width: 768px) {
    .article-card:not(:last-child){
      margin-bottom: 5%;
    }
  
    .article-card{
      max-width:350px;
    }
    // .article-card-content h3 a {
    //   font-size: 1.5rem;
    // }
    // .article-grid {
    //   grid-template-columns: repeat(2,1fr);
    //   gap: 8px;
    // }
    // .article-card-content .category{
    //   font-size:1.2rem;
    // }

  }
</style> 