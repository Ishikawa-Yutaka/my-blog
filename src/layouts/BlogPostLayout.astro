---
// src/layouts/BlogPostLayout.astro
import { NORMALIZED_BASE_URL, getPath } from '../env';
const { frontmatter } = Astro.props;

// カテゴリー名の日本語マッピング
const categoryNames = {
  web: { en: 'Web', ja: 'ウェブ' },
  photo: { en: 'Photo', ja: '写真' },
  stroll: { en: 'Stroll', ja: '散歩' },
  succulent: { en: 'Succulent', ja: '多肉植物' }
};

const category = categoryNames[frontmatter.category] || { en: 'Unknown', ja: '不明' };
---
<main>
    <article class="blog-post">
        <div class="header-wrapper">
          <header class="post-header">
            <div class="category-info" data-category={frontmatter.category}>{category.en}<span>- {category.ja}</span></div>
            <h1 class="post-title">
              {frontmatter.title}
            </h1>
            <time class="post-date" datetime={frontmatter.date.toISOString()}>
              {frontmatter.date.toLocaleDateString('ja-JP')}
            </time>
            {frontmatter.image && (
              <img src={frontmatter.image} alt={frontmatter.title} class="post-eyecatch" />
            )}
          </header>
        </div>
      <div class="post-content" data-category={frontmatter.category}>
        <slot />
      </div>

      <nav class="post-navigation">
        <a href="/my-blog">Topページへ</a>
        <a href="/my-blog/blog" class={frontmatter.category === 'web' ? 'current' : ''}>Web 一覧へ</a>
        <a href="/my-blog/blog" class={frontmatter.category === 'photo' ? 'current' : ''}>Photo一覧へ</a>
        <a href="/my-blog/blog" class={frontmatter.category === 'stroll' ? 'current' : ''}>Stroll一覧へ</a>
        <a href="/my-blog/blog" class={frontmatter.category === 'succulent' ? 'current' : ''}>Succulents 一覧へ</a>
      </nav>
    </article>
  </main>









<!-- 
<BaseLayout title={frontmatter.title}> -->
    <!-- <slot name="header" slot="header" />

    <article>
        <h1>{frontmatter.title}</h1>
        <p class="date">投稿日: {new Date(frontmatter.date).toLocaleDateString('ja-JP')}</p>

        <div class="tags">
            {frontmatter.tags.map((tag) => (
                <span class="tag">{tag}</span>
            ))}
        </div>

        <div class="content"> -->
            <!-- <slot /> マークダウンコンテンツがここに入る -->
        <!-- </div>
    </article> -->

    <!-- <slot name="footer" slot="footer" />
</BaseLayout> -->

<style>
/* style.css にこの部分を追記 */

/* ===============================================
   ブログ詳細ページ用のスタイル
   =============================================== */

.category-info {
  font-family: "M PLUS 1", sans-serif;
  font-size: 2.5rem;
  font-weight: 100;
  letter-spacing: 0.04em;
  color: var(--text-color);
  display: inline-block;
  margin-bottom: 0.5em;
  position: fixed;
  top: 87px;
  left: 4vw;
  z-index: 10000;
  height: 49px;
  padding: 0 3px;
  background-color: rgba(255, 255, 255, 0.7); 
  /* 背景を10px分ぼかす */
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px); /* Safari向けのベンダープレフィックス */
}

.category-info::first-letter{
  font-size: 3rem;
  color: var(--category-web);
}

/* カテゴリー別の色分け */
.category-info[data-category="web"]::first-letter {
  color: var(--category-web);
}

.category-info[data-category="photo"]::first-letter {
  color: var(--category-photo);
}

.category-info[data-category="stroll"]::first-letter {
  color: var(--category-stroll);
}

.category-info[data-category="succulent"]::first-letter {
  color: var(--category-succulent);
}

.category-info span {
  font-size: 1.3rem;
  vertical-align: middle;
  margin-left: 0.5em;
}

/* 記事本体 */
.header-wrapper{
  background-color: var(--main-color);
  padding: 15px 0 20px;
  margin-top: 80px;
}








    /* article {
        margin: 2rem 0;
    }
    h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;t
    }
    .date {
        color: #666;
        margin-bottom: 1rem;
    }
    .tags {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 2rem;
    }
    .tag {
        background-color: #f0f0f0;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.85rem;
    }
    .content {
        line-height: 1.8;
    } */
</style>
